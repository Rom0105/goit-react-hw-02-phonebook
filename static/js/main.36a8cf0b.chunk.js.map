{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","this","type","onChange","pattern","title","required","Component","Filter","defaultProps","ContactItem","onDeleteContact","href","onClick","ContactList","contacts","map","App","filter","addContact","newContact","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","filteredResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36a8cf0b.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      id: '',\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Add contact</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","const ContactItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>{contact.name}: </span>\r\n      <a href={`tel:${contact.number}`}>{contact.number}</a>\r\n      <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactItem contact={contact} onDeleteContact={onDeleteContact} key={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport '../App/App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = newContact => {\n    const dublicateName = this.state.contacts.find(contact => contact.name === newContact.name);\n\n    if (dublicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredResults = this.filterContacts();\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={filteredResults} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}